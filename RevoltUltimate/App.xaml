<Application x:Class="RevoltUltimate.Desktop.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:RevoltUltimate.Desktop"
             xmlns:pages="clr-namespace:RevoltUltimate.Desktop.Pages"
             xmlns:converters="clr-namespace:RevoltUltimate.Desktop.Converters"
             Startup="Application_Startup">
    <Application.Resources>
        <ResourceDictionary>
            <BitmapImage x:Key="RoninLogoImage" UriSource="images/RoninLogo.png"/>
            <converters:ProgressToWidthConverter x:Key="ProgressToWidthConverter"/>
            <converters:ProgressBorderBrushConverter x:Key="ProgressBorderBrushConverter"/>
            <Style TargetType="Window" x:Key="GlobalWindowStyle">
                <Setter Property="WindowStyle" Value="None"/>
                <Setter Property="AllowsTransparency" Value="True"/>
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Foreground" Value="White"/>
            </Style>

            <Style TargetType="{x:Type local:MainWindow}" BasedOn="{StaticResource GlobalWindowStyle}"/>
            <Style TargetType="{x:Type pages:OptionsWindow}" BasedOn="{StaticResource GlobalWindowStyle}"/>
            <Style x:Key="ThemedListBoxStyle" TargetType="ListBox">
                <Setter Property="Background" Value="Black"/>
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="ListBoxItem">
                            <Setter Property="Foreground" Value="White"/>
                            <Setter Property="Padding" Value="3"/>
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="#333333"/>
                                    <Setter Property="Foreground" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#222222"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ProgressBorderStyle" TargetType="Border">
                <Setter Property="Background" Value="#333"/>
                <Setter Property="CornerRadius" Value="5"/>
                <Setter Property="BorderBrush" Value="#555"/>
                <Setter Property="BorderThickness" Value="2"/>
            </Style>
            <Style x:Key="ProgressTextBlockStyle" TargetType="TextBlock">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="14"/>
            </Style>
            <Style x:Key="SetupButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Padding" Value="10"/>
            </Style>
            <Style x:Key="ContextMenuButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Gray"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Padding" Value="5"/>
            </Style>
            <Style x:Key="ThemedButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderBrush" Value="White"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Padding" Value="8,4"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter"
                                      Focusable="False"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#222222"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="#444444"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="White"/>
                                    <Setter Property="Foreground" Value="#CCCCCC"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="#111111"/>
                                    <Setter TargetName="border" Property="BorderBrush" Value="#333333"/>
                                    <Setter Property="Foreground" Value="#555555"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="TitleBarButtonBaseStyle" TargetType="Button">
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  RecognizesAccessKey="True"
                                                  TextElement.Foreground="{TemplateBinding Foreground}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="BlackTextMenuItemStyle" TargetType="{x:Type MenuItem}">
                <Setter Property="Foreground" Value="Black"/>
            </Style>
            <Style x:Key="TitleBarButtonStyle" TargetType="Button" BasedOn="{StaticResource TitleBarButtonBaseStyle}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="#2196F3"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="Red"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="HamburgerLineStyle" TargetType="Rectangle">
                <Setter Property="Fill" Value="White"/>
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Button}}" Value="True">
                        <Setter Property="Fill" Value="#2196F3"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>


            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="White"/>
            </Style>
            <Style TargetType="CheckBox">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="Padding" Value="5,0,0,0"/>
            </Style>
            <Style TargetType="Border">
                <Setter Property="BorderBrush" Value="#444"/>
            </Style>

        </ResourceDictionary>
    </Application.Resources>
</Application>