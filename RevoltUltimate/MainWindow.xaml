<Window x:Class="RevoltUltimate.Desktop.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:RevoltUltimate.Desktop.Converters"
        xmlns:controls="clr-namespace:RevoltUltimate.Desktop.Controls"
        Title="Revolt Ultimate" Height="450" Width="800"
        Icon="{StaticResource RoninLogoImageSource}"
        ResizeMode="CanMinimize">
    <Window.Resources>
        <ImageSource x:Key="RoninLogoImageSource">images/RoninLogo.png</ImageSource>
        <converters:ProgressToWidthConverter x:Key="ProgressToWidthConverter"/>

        <Style x:Key="TitleBarButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#333333"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#555555"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="HamburgerLineStyle" TargetType="Rectangle">
            <Setter Property="Fill" Value="White"/>
            <Setter Property="RadiusX" Value="1"/>
            <Setter Property="RadiusY" Value="1"/>
        </Style>

        <Style x:Key="CloseButtonStyle" TargetType="Button" BasedOn="{StaticResource TitleBarButtonStyle}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Red"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="DarkRed"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SharedContextMenuStyle" TargetType="ContextMenu">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="BorderBrush" Value="White"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SharedMenuItemStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="Black"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="6,3,6,3"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border x:Name="Border"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter x:Name="HeaderHost"
                                              ContentSource="Header"
                                              RecognizesAccessKey="True"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="LightGray" />
                                <Setter Property="Foreground" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="DarkGray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SharedSeparatorStyle" TargetType="{x:Type Separator}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Height" Value="1"/>
            <Setter Property="Margin" Value="0,4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Separator">
                        <Rectangle Fill="{TemplateBinding Background}"
                                   Height="{TemplateBinding Height}"
                                   Margin="{TemplateBinding Margin}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <DockPanel>
        <Border Background="Black" Height="40" DockPanel.Dock="Top" MouseDown="TitleBar_MouseDown">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Grid.Column="0" Margin="10,0,0,0">
                    <Image Source="{StaticResource RoninLogoImageSource}" Height="28" VerticalAlignment="Center"/>
                </StackPanel>
                <StackPanel Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="1">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Grid Width="36" Height="36" Margin="0,0,8,0">
                            <Ellipse Fill="#2196F3" Stroke="White" StrokeThickness="2"/>
                            <TextBlock x:Name="LevelTextBlock"
                                       FontWeight="Bold"
                                       FontSize="18"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"/>
                        </Grid>
                        <Grid x:Name="XpBarGrid" Width="260" Height="22" HorizontalAlignment="Center"
                              ToolTip="">
                            <Border
                                Background="Transparent"
                                BorderBrush="White"
                                BorderThickness="2"
                                CornerRadius="11"/>
                            <Border
                                Background="#428bca"
                                CornerRadius="11"
                                HorizontalAlignment="Left"
                                Margin="2,2,2,2">
                                <Border.Width>
                                    <MultiBinding Converter="{StaticResource ProgressToWidthConverter}">
                                        <Binding ElementName="XpProgressBar" Path="Value"/>
                                        <Binding ElementName="XpProgressBar" Path="Maximum"/>
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource AncestorType=Grid}"/>
                                    </MultiBinding>
                                </Border.Width>
                            </Border>
                            <ProgressBar x:Name="XpProgressBar" Value="50" Maximum="100" Visibility="Collapsed"/>
                        </Grid>
                    </StackPanel>
                </StackPanel>
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Grid.Column="2"
                            Margin="0,0,2,0">
                    <Grid Width="40" Height="40" Margin="0,0,8,0" VerticalAlignment="Center">
                        <Ellipse
                            Stroke="White"
                            StrokeThickness="2"
                            Fill="Black"/>
                        <Ellipse
                            Margin="3">
                            <Ellipse.Fill>
                                <ImageBrush ImageSource="{Binding ProfilePicturePath, FallbackValue='images/DefaultProfilePic.png', TargetNullValue='images/DefaultProfilePic.png'}" Stretch="Uniform"/>
                            </Ellipse.Fill>
                        </Ellipse>
                    </Grid>
                    <controls:NotificationBell x:Name="NotificationSystem" VerticalAlignment="Center" Margin="0,0,4,0"/>
                    <Button Width="24" Height="24"
                            Style="{StaticResource TitleBarButtonStyle}"
                            Padding="0"
                            ToolTip="Settings"
                            Click="Menu_Settings_Click">
                        <TextBlock FontFamily="Segoe MDL2 Assets"
                                   FontSize="16"
                                   Text="&#xE713;"
                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                   VerticalAlignment="Center"
                                   HorizontalAlignment="Center"/>
                    </Button>
                    <Button Width="24" Height="24"
                            Style="{StaticResource TitleBarButtonStyle}"
                            Padding="0"
                            ToolTip="Menu"
                            Click="HamburgerMenu_Click">
                        <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4,2,4,2">
                            <Rectangle Height="3" Width="16" Style="{StaticResource HamburgerLineStyle}" Margin="0,1"/>
                            <Rectangle Height="3" Width="16" Style="{StaticResource HamburgerLineStyle}" Margin="0,1"/>
                            <Rectangle Height="3" Width="16" Style="{StaticResource HamburgerLineStyle}" Margin="0,1"/>
                        </StackPanel>
                        <Button.ContextMenu>
                            <ContextMenu x:Name="HamburgerMenu" Style="{StaticResource SharedContextMenuStyle}">
                                <!-- Apply item and separator styles through ContextMenu.Resources for items defined in XAML -->
                                <ContextMenu.Resources>
                                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource SharedMenuItemStyle}"/>
                                    <Style TargetType="{x:Type Separator}" BasedOn="{StaticResource SharedSeparatorStyle}"/>
                                </ContextMenu.Resources>
                                <MenuItem Header="Settings" Click="Menu_Settings_Click"/>
                                <MenuItem Header="About" Click="Menu_About_Click"/>
                                <Separator/>
                                <MenuItem Header="Exit" Click="Close_Click"/>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Button Width="24" Height="24" Content="—"
                            Click="Minimize_Click"
                            Style="{StaticResource TitleBarButtonStyle}"/>
                    <Button x:Name="CloseButton" Width="24" Height="24" Content="✕"
                            Click="Close_Click"
                            Style="{StaticResource CloseButtonStyle}"/>
                </StackPanel>
            </Grid>
        </Border>
        <Grid x:Name="MainContent">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled" Margin="15,15,15,15">
                <UniformGrid x:Name="GamesGrid" Columns="5"/>
            </ScrollViewer>
        </Grid>
    </DockPanel>
</Window>